name: ci

on:
  push:
    branches:
      - 'main'

jobs:
  get-changed:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: |
            **/VERSION
          json: true
          write_output_files: true
      -
        name: Map to JSON
        id: mapped-files
        run: |
          set -eux
          DATA=$(echo ${{ steps.changed-files.outputs.all_changed_files }} | jq -c '. | map(split("/")[0]) | unique')
          echo "matrix=$DATA" >> "$GITHUB_OUTPUT"
  run-matrix:
    needs: get-changed
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{ fromJSON(needs.get-changed.outputs.matrix) }}
    steps:
      - name: echome
        run: echo "version ${{ matrix.versions }}"






        # name: Verify the contents of the .github/outputs/all_changed_files.json file
        # run: |
        #   cat .github/outputs/all_changed_files.json
  # docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v4
  #     - 
  #       name: Get changed files
  #       id: changed-files
  #       uses: tj-actions/changed-files@v35
  #       with:
  #         files: |
  #           **/VERSION
  #     -
  #       name: Set up QEMU
  #       if: steps.changed-files.outputs.any_changed == 'true'
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Docker Buildx
  #       if: steps.changed-files.outputs.any_changed == 'true'
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Login to Docker Hub
  #       if: steps.changed-files.outputs.any_changed == 'true'
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     -
  #       name: Get version
  #       if: steps.changed-files.outputs.any_changed == 'true'
  #       run: |
  #         VER=$(cat app1/VERSION)
  #         echo "VERSION=$VER" >> $GITHUB_ENV
  #     -
  #       name: Build and push
  #       if: steps.changed-files.outputs.any_changed == 'true'
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: "{{defaultContext}}:app1"
  #         push: true
  #         tags: |
  #           paulkm/app1:${{ env.VERSION }}
  #           paulkm/app1:latest
